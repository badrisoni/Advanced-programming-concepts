#include <stdio.h>
#include <stdlib.h>
struct node
{
    int val;
    struct node * next;
};
void append(struct node **h,int n)
{
  struct node * app_node=(struct node*)malloc(sizeof(struct node));
 
   app_node->val=n;
   
 app_node->next=NULL;
   struct node * current = (*h);
 
   if(*h==NULL)
  {
   *h=app_node;

    }
 
   else
 {
 while(current->next!=NULL)
   {
        current=current->next;
  }
    current->next=app_node;
 }

}
void push(struct node ** h,int n)

{
 
   struct node * new_node=(struct node*)malloc(sizeof(struct node));
  
  new_node->val=n;
  
  new_node->next=(* h);
 
   (*h)=new_node;

}
void insert_at(struct node **h,int pos,int n)
{
    if(pos==1)
    {
        push(h,n);
    }
    else
    {
        int i=1;
        struct node * current=(*h);
        struct node * new_node=(struct node*)malloc(sizeof(struct node));
        while(i<pos-1)
        {
            if(current)
            current=current->next;
            i++;
        }
        if(current)
        {
        new_node->val=n;
        new_node->next=current->next;
        current->next=new_node;
        }
        else
        {
            printf("Not possible\n");
            exit(0);
        }
    }
}
void delete_last(struct node **h)
{
    struct node * current=(*h);
    if((*h)->next==NULL)
    {
        *h=NULL;
        
    }
    else
    {
        while(current->next->next!=NULL)
        {
            current=current->next;
        }
        free(current->next);
        current->next=NULL;
    }
}
void delete_start(struct node **h)
{
    struct node * current= (*h);
    (*h)=current->next;
    free(current);
}

int main()
{
struct node* head=NULL;
   int num=0;
  while(num!=-1)
  {
   scanf("%d",&num);
   append(&head,num);
   }
  insert_at(&head,3,9);
   if(head==NULL)
   {
       printf("EMPTY");
   }
   else
   {
       while(head!=NULL)
  {
  printf("%d ",head->val);
   head=head->next;
  }
   }
 return 0;
}
